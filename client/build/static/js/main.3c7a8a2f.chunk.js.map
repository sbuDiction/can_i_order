{"version":3,"sources":["functions/Calculations.js","functions/PlaceOrders.js","functions/Checkout.js","global/socket-init.js","utils/Auth.js","main/home.jsx","main/checkout.jsx","main/orders.jsx","app-components/AccountSettings.jsx","app-components/menu.jsx","App/ReaOrder.jsx","pages/createAccount.jsx","pages/logIn.jsx","admin/components/StockTable.jsx","admin/components/ClientTable.jsx","admin/components/ActiveOrders.jsx","admin/components/UpdateStockForm.jsx","admin/components/Dashbord.jsx","admin/components/AdminMenu.jsx","admin/Main.jsx","Router.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","total","totalCost","price","qty","increament","decreament","getToal","init","orderPrice","orderQty","getPriceTotal","orderCost","resetCounter","getQty","orders","place","userOrder","push","send","getTotal","add","order","forEach","item","Number","socket","Auth","isAuthenticated","client_id","token","check","jwt","window","localStorage","getItem","Axios","post","then","res","data","response","getToken","this","getAuth","getClientId","Calculations","require","PlaceOrders","calculations","placeOrder","optionsList","key","text","value","label","color","empty","circular","icon","CardExampleGroupCentered","handleOrders","e","a","id","params","setState","open","axios","orderId","orderName","name","orderDescription","item_description","toFixed","closeModal","state","description","count","counter","user_id","setItem","JSON","stringify","redirect","orderTotal","isDisabled","out_of_stock","visble","cancelOrder","handleFilter","event","console","log","renderModal","message","Message","warning","header","Modal","centered","size","dimmer","Header","Content","Description","Actions","Button","floated","onClick","disabled","Icon","basic","content","secondary","negative","attached","items","get","Segment","Group","horizontal","inverted","style","fontWeight","fontSize","Dropdown","options","fluid","multiple","selection","compact","onChange","className","Card","itemsPerRow","stackable","doubling","map","Meta","React","Component","SocketConnection","endpoint","socketIOClient","chekout","Checkout","StickyExampleActive","props","handleOrderButton","food_data","emit","status","removeItem","renderOrderInfo","length","paddingLeft","renderOrderButton","positive","renderItems","renderOrderList","_","paddingBottom","isLoading","jsonData","parse","textAlign","Grid","columns","relaxed","Column","paddingTop","verticalAlign","MyOrders","ordersList","config","headers","on","Image","Loader","active","is_done","order_cost","time_stamp","Label","order_state","Divider","as","renderActiveCardOrders","to","AccountSettings","user","dividing","src","last_name","Subheader","stacked","raised","tertiary","ribbon","Form","Input","iconPosition","placeholder","email","type","home_address","MenuExampleSecondary","activeItem","orderCount","handleItemClick","Menu","pointing","borderless","position","Item","floating","ReaOrder","CreateAccount","handleSubmit","pass_code","confirm_pass_code","email_address","phone_number","input_name","input_surname","input_password","input_email","input_phone","isMatch","results","handleChange","input","target","getPasswordLength","matchFound","handleRedirect","renderPopUp","Popup","toString","toUpperCase","positionFixed","trigger","required","autoComplete","loading","alert","fontFamily","extra","Login","handleLogin","no_input","handleOnchange","renderStart","Container","animated","visible","hidden","renderLogin","prompt","StockTable","renderTableItems","stock","Table","Body","Row","Cell","isTrue","celled","striped","selectable","HeaderCell","ClientTable","users","verified","Checkbox","DividerExampleHorizontal","getData","foodItems","incoming","changeData","ready","ready_id","ready_order","accepted","accept_id","accept_order","query","renderOrderedItems","divided","order_name","order_description","order_id","Extra","height","overflowY","UpdateStockForm","handleInputChange","handleAddButton","isNew","success","widths","Field","control","grouped","Radio","checked","TextArea","labelPosition","Dashbord","close","renderHtmlContent","renderMenu","vertical","renderUpdateStockModal","scrolling","role","MenuExampleInvertedSecondary","Main","PrivateRoute","component","rest","render","pathname","Router","exact","path","createAccount","ReaOrderApp","Admin","App","auth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3c7a8a2f.chunk.js","sourcesContent":["module.exports = () => {\r\n    let total = 1;\r\n    let totalCost = 0;\r\n    let price = 0;\r\n    let qty = 0;\r\n\r\n    const increament = () => {\r\n        totalCost += price;\r\n        total += 1;\r\n        qty -= 1;\r\n    }\r\n\r\n    const orderCost = () => totalCost;\r\n\r\n    const decreament = () => {\r\n        totalCost -= price;\r\n        total -= 1;\r\n        qty += 1;\r\n    }\r\n\r\n    const init = (orderPrice, orderQty) => {\r\n        if (orderPrice !== '') {\r\n            totalCost = orderPrice;\r\n            price = orderPrice;\r\n            qty = orderQty - 1;\r\n        }\r\n    }\r\n\r\n    const getPriceTotal = () => price;\r\n\r\n    const getToal = () => total;\r\n\r\n    const resetCounter = () => {\r\n        return total = 1;\r\n    }\r\n\r\n    const getQty = () => qty;\r\n\r\n\r\n    return {\r\n        increament,\r\n        decreament,\r\n        getToal,\r\n        init,\r\n        getPriceTotal,\r\n        orderCost,\r\n        resetCounter,\r\n        getQty\r\n    }\r\n}","module.exports = () => {\r\n    let orders = [];\r\n\r\n    const placeOrder = (userOrder) => {\r\n        orders.push(userOrder);\r\n    }\r\n\r\n    const getOrders = () => {\r\n        return orders;\r\n    }\r\n\r\n    return {\r\n        place: placeOrder,\r\n        send: getOrders,\r\n    }\r\n}","module.exports = () => {\r\n    let total = 0;\r\n\r\n    const add = (order) => {\r\n        if (order !== null) {\r\n            order.forEach(item => {\r\n                total += Number(item.price);\r\n            });\r\n        } else {\r\n            total = 0;\r\n        }\r\n    }\r\n\r\n    const getTotal = () => {\r\n        return total;\r\n    }\r\n\r\n\r\n    return {\r\n        getTotal,\r\n        add,\r\n    }\r\n}","import { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nlet socket;\r\nclass SocketConnection extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            endpoint: \"http://localhost:5000\",\r\n        }\r\n        socket = socketIOClient(this.state.endpoint);\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport { SocketConnection, socket };","import Axios from \"axios\";\r\n\r\nconst Auth = {\r\n    isAuthenticated: false,\r\n    client_id: 0,\r\n    token: '',\r\n\r\n    async check() {\r\n        let jwt = {\r\n            token: '',\r\n        };\r\n\r\n        jwt.token = window.localStorage.getItem('token');\r\n        if (jwt.token !== '') {\r\n            await Axios.post('/api/rea_order/verify', jwt)\r\n                .then(res => {\r\n                    this.isAuthenticated = res.data.response;\r\n                    this.client_id = res.data.client_id;\r\n                    this.token = res.data.token;\r\n                })\r\n        }\r\n    },\r\n\r\n    getToken() {\r\n        return this.token;\r\n    },\r\n    getAuth() {\r\n        return this.isAuthenticated;\r\n    },\r\n    getClientId() {\r\n        return this.client_id;\r\n    }\r\n\r\n};\r\n\r\nexport default Auth;","import React from 'react';\r\nimport Auth from '../utils/Auth';\r\nimport { Card, Button, Modal, Icon, Message, Label, Segment, Dropdown, Advertisement } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nconst Calculations = require('../functions/Calculations');\r\nconst PlaceOrders = require('../functions/PlaceOrders');\r\n\r\nconst calculations = Calculations();\r\nconst placeOrder = PlaceOrders();\r\nconst optionsList = [\r\n    {\r\n        key: 'Kota',\r\n        text: 'Kota',\r\n        value: 'Kota',\r\n        label: { color: 'red', empty: true, circular: true },\r\n    },\r\n    {\r\n        key: 'Dagwood',\r\n        text: 'Dagwood',\r\n        value: 'Dagwood',\r\n        label: { color: 'blue', empty: true, circular: true },\r\n    },\r\n    {\r\n        key: 'Large meals',\r\n        text: 'Large meals',\r\n        value: 'Large meals',\r\n        label: { circular: true, icon: 'food' },\r\n    },\r\n    {\r\n        key: 'Small meals',\r\n        text: 'Small meals',\r\n        value: 'Small meals',\r\n        label: { circular: true, icon: 'food' },\r\n    },\r\n    {\r\n        key: 'Low price',\r\n        text: 'Low price',\r\n        value: 'Low price',\r\n        label: { circular: true, icon: 'money bill alternate' },\r\n    },\r\n    {\r\n        key: 'High price',\r\n        text: 'High price',\r\n        value: 'High price',\r\n        label: { circular: true, icon: 'money bill alternate' },\r\n    },\r\n]\r\nexport default class CardExampleGroupCentered extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            items: [],\r\n            open: false,\r\n            isDisabled: true,\r\n            res: '',\r\n            orders: [],\r\n            counter: 1,\r\n            orderId: 0,\r\n            orderName: '',\r\n            orderDescription: '',\r\n            orderPrice: '',\r\n            out_of_stock: false,\r\n            visble: false\r\n        }\r\n    }\r\n\r\n    handleOrders = async (e, { id }) => {\r\n        const params = { id: id }\r\n        if (id) {\r\n            this.setState({ open: true });\r\n            await axios.post('/api/rea_order/get_order', params)\r\n                .then(res => {\r\n                    let data = res.data.data;\r\n                    calculations.init(Number(data.price), res.data.data.qty);\r\n                    this.setState({\r\n                        orders: [data],\r\n                        orderId: data.id,\r\n                        orderName: data.name,\r\n                        orderDescription: data.item_description,\r\n                        orderPrice: calculations.getPriceTotal().toFixed(2),\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        const { orderId, orderName, orderDescription, orderPrice, counter } = this.state;\r\n        let orders = {\r\n            id: orderId,\r\n            name: orderName,\r\n            description: orderDescription,\r\n            price: orderPrice,\r\n            count: counter,\r\n            user_id: Auth.getClientId()\r\n        };\r\n        placeOrder.place(orders);\r\n        window.localStorage.setItem('user_order', JSON.stringify(placeOrder.send()));\r\n        this.setState({\r\n            open: false,\r\n            counter: calculations.resetCounter(),\r\n            redirect: true,\r\n        });\r\n    }\r\n\r\n    increament = () => {\r\n        calculations.increament()\r\n        let orderTotal = calculations.orderCost();\r\n        let total = calculations.getToal();\r\n        let qty = calculations.getQty();\r\n        this.setState({\r\n            counter: total,\r\n            orderPrice: orderTotal.toFixed(2),\r\n        });\r\n        if (total > 1) {\r\n            this.setState({ isDisabled: false });\r\n        }\r\n        if (qty === 0) {\r\n            this.setState({ out_of_stock: true, visble: true });\r\n        }\r\n    }\r\n\r\n    decreament = () => {\r\n        calculations.decreament();\r\n        let orderTotal = calculations.orderCost();\r\n        let total = calculations.getToal();\r\n        let qty = calculations.getQty();\r\n        this.setState({\r\n            counter: total,\r\n            orderPrice: orderTotal.toFixed(2),\r\n        });\r\n        if (total === 1) {\r\n            this.setState({ isDisabled: true });\r\n        }\r\n        if (qty !== 0) {\r\n            this.setState({ out_of_stock: false, visble: false });\r\n        }\r\n    }\r\n\r\n    cancelOrder = () => {\r\n        this.setState({\r\n            open: false,\r\n            counter: calculations.resetCounter(),\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await axios.get('/api/rea_order/all')\r\n            .then(response => {\r\n                let results = response.data;\r\n                let data = results.data;\r\n                this.setState({ items: data });\r\n            })\r\n    }\r\n\r\n    handleFilter = event => {\r\n        console.log(event);\r\n    }\r\n\r\n    renderModal = () => {\r\n        const { orderName, orderDescription, orderPrice, isDisabled, counter, open, out_of_stock, visble } = this.state;\r\n        let message;\r\n        if (visble) {\r\n            message = <Message warning header={`Sorry the ${orderName} out of stock.`} />\r\n        } else if (!visble) {\r\n            message = ''\r\n        }\r\n        return (\r\n            <Modal centered={false} open={open} size='small' dimmer='blurring'>\r\n                <Modal.Header>{orderName}</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>{orderDescription}</Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button icon circular floated='left' count={counter} onClick={this.decreament} disabled={isDisabled}>\r\n                        <Icon name='minus' />\r\n                    </Button>\r\n                    <Button basic floated='left'>{counter}</Button>\r\n                    <Button icon circular floated='left' count={counter} price={orderPrice} onClick={this.increament} disabled={out_of_stock}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                    <Button circular onClick={this.closeModal} content={`Add ${counter} to order R${orderPrice}`} secondary />\r\n                </Modal.Actions>\r\n                {message}\r\n                <Button content='Cancel order' negative attached='top' onClick={this.cancelOrder} />\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.state;\r\n        return (\r\n            <div>\r\n                <Segment.Group horizontal size='small'>\r\n                    <Segment inverted color='teal'><p style={{ fontWeight: 300, fontSize: 20 }}>Food menu <Icon name='food' size='small' /></p></Segment>\r\n                    <Segment inverted color='teal'>\r\n                        <Dropdown text='Filter food menu' icon='filter' options={optionsList} fluid multiple selection name='filter' compact onChange={this.handleFilter} />\r\n                    </Segment>\r\n                    {/* <Segment inverted color='teal'>Bottom</Segment> */}\r\n                </Segment.Group>\r\n                <hr className='hb' />\r\n                {/* <Advertisement unit='panorama' test='Advertisement' centered /> */}\r\n                <Card.Group itemsPerRow={3} stackable centered doubling>\r\n                    {items.map((item) => (\r\n                        <Card key={item.id} id={item.id} onClick={this.handleOrders} color='teal' >\r\n                            <Card.Content>\r\n                                <Card.Header>{item.name}</Card.Header>\r\n                                <Card.Description>\r\n                                    {item.item_description}\r\n                                </Card.Description>\r\n                                <Card.Meta><Icon name='money bill alternate' /> R {item.price}</Card.Meta>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    ))}\r\n                </Card.Group>\r\n                {this.renderModal()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { socket } from '../global/socket-init';\r\nimport _ from 'lodash';\r\nimport { Component } from 'react';\r\nimport { Grid, Segment, Button } from 'semantic-ui-react';\r\nconst Checkout = require('../functions/Checkout');\r\n\r\n\r\n\r\nconst chekout = Checkout();\r\nexport default class StickyExampleActive extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            food_data: [],\r\n            status: 'Your items'\r\n        }\r\n    }\r\n\r\n    handleOrderButton = () => {\r\n        const { food_data } = this.state;\r\n        let params = { food_data };\r\n        socket.emit('add order', params.food_data);\r\n        this.setState({ food_data: [], status: 'Your order is sent.' });\r\n        window.localStorage.removeItem('user_order');\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        socket.emit('initial_data');\r\n        const jsonData = window.localStorage.getItem('user_order');\r\n        const data = JSON.parse(jsonData);\r\n        chekout.add(data);\r\n        if (data === null) {\r\n            this.setState({ status: 'Your cart is empty!', food_data: [] })\r\n        } else {\r\n            this.setState({ food_data: data });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        chekout.add(null);\r\n    }\r\n\r\n    renderOrderInfo = () => {\r\n        const { food_data } = this.state;\r\n        let content;\r\n        if (food_data.length !== 0) {\r\n            content = <div>\r\n                <div className='infoMsg'>\r\n                    <span className='hs'>If you don't come to pick up your order we will try calling.</span>\r\n                </div>\r\n                <hr className='hb' />\r\n                <ul>\r\n                    <li className='d6 cc'>\r\n                        <div>\r\n                            <div className='cc'>Subtotal\r\n                                <span style={{ paddingLeft: 120 }} className='cost'>R {chekout.getTotal()},00</span>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='gr'></li>\r\n                    <li className='gr'></li>\r\n                </ul>\r\n                <hr className='hb' />\r\n                <div className='d6'>\r\n                    <div style={{ color: 'black' }}>Total\r\n                        <span style={{ paddingLeft: 130 }}>R {chekout.getTotal()},00</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        } else {\r\n            content = '';\r\n        }\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n\r\n    renderOrderButton = () => {\r\n        const { food_data } = this.state;\r\n        let content;\r\n        if (food_data.length !== 0) {\r\n            content = <Button onClick={this.handleOrderButton} className='orderBtn' positive>\r\n                Place order\r\n            </Button>\r\n        } else {\r\n            content = '';\r\n        }\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n\r\n    renderItems = () => {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    <li className='d6 cc'>\r\n                        <div>\r\n                            <div className='cc'>Subtotal\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='gr'></li>\r\n                    <li className='d6 cc'>\r\n                        <div>\r\n                            <div className='cc'>Service\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='gr'></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderOrderList = () => {\r\n        const { food_data } = this.state;\r\n        return (\r\n            <div>\r\n                {_.map(food_data, (item) => (\r\n                    <div key={item.id} style={{ paddingLeft: 30, paddingBottom: 40 }} className='orderContainer'>\r\n                        <h4 className='orderHeader'>{item.name} <span>(R {item.price})</span></h4>\r\n                        <ul>\r\n                            <li>{item.description}</li>\r\n                        </ul>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        const { status } = this.state\r\n        return (\r\n            <Segment basic textAlign='left'>\r\n                <Grid columns={2} relaxed='very' stackable>\r\n                    <Grid.Column>\r\n                        <div>\r\n                            <h1 className='blg'>Kota House, Vosloorus</h1>\r\n                        </div>\r\n                        <hr className='hb' />\r\n                        <div>\r\n                            <h3 className=''>{status}</h3>\r\n                        </div>\r\n                        <div style={{ paddingTop: 15, paddingLeft: 5 }}>\r\n                            {/* {this.renderItems()} */}\r\n                            {this.renderOrderList()}\r\n                        </div>\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column verticalAlign='middle' >\r\n                        {this.renderOrderButton()}\r\n                        {this.renderOrderInfo()}\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Divider, Header, Icon, Loader, Card, Image, Label } from 'semantic-ui-react';\r\nimport { socket } from '../global/socket-init';\r\nimport _ from 'lodash';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Auth from '../utils/Auth';\r\nimport Axios from 'axios';\r\n\r\nexport default class MyOrders extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            ordersList: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let config = {\r\n            headers: {\r\n                'Authorization': `bearer:${Auth.getToken()}`\r\n            }\r\n        }\r\n        socket.emit('get orders');\r\n        socket.on('data', async () => {\r\n            Axios.get('/api/rea_order/get/active_order', config)\r\n                .then(res => {\r\n                    this.setState({ ordersList: res.data.data });\r\n                });\r\n        });\r\n    }\r\n\r\n    renderActiveCardOrders() {\r\n        const { ordersList } = this.state;\r\n        return (\r\n            <div>\r\n                <Card.Group centered stackable>\r\n                    {_.map(ordersList, (orders) => (\r\n                        <Card key={orders.id} color='teal'>\r\n                            <Card.Content>\r\n                                <Image floated='right'>\r\n                                    <Loader active={orders.is_done} size='small' />\r\n                                </Image>\r\n                                <Card.Header>{orders.name}</Card.Header>\r\n                                <Card.Meta><Icon name='money bill alternate' /> R {orders.order_cost}</Card.Meta>\r\n                                <Card.Description>\r\n                                    <strong>{orders.item_description}</strong>\r\n                                </Card.Description>\r\n                                <hr className='hb' />\r\n                                <Card.Meta>Time: {`${orders.time_stamp}`}</Card.Meta>\r\n                                <Card.Meta>Order count: {orders.count}</Card.Meta>\r\n                                <Card.Meta>Order id: {orders.id}</Card.Meta>\r\n                            </Card.Content>\r\n                            <Label attached='bottom right' content={orders.order_state} color='teal' />\r\n                        </Card>\r\n                    ))}\r\n                </Card.Group>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!Auth.getAuth()) {\r\n            return <Redirect to='/login' />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className='currentOrders'>\r\n                    <Divider horizontal>\r\n                        <Header as='h4' color='teal'>\r\n                            My orders\r\n                            <Icon color='teal' name='alarm' />\r\n                        </Header>\r\n                    </Divider>\r\n                    {this.renderActiveCardOrders()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Header, Image, Button, Grid, Form, Segment, Label } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\nimport Auth from '../utils/Auth';\r\n\r\nclass AccountSettings extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      user: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let config = {\r\n      headers: {\r\n        'Authorization': `bearer:${Auth.getToken()}`\r\n      }\r\n    }\r\n    await Axios.get('/api/rea_order/user', config)\r\n      .then(res => {\r\n        this.setState({ user: res.data.data });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <div>\r\n        <Header as='h2' dividing>\r\n          <Image circular src='./logo512.png' /> <span style={{ color: 'teal', fontWeight: 300, fontSize: 20 }}>{user.name + ' ' + user.last_name}</span>\r\n          <Header.Subheader>\r\n            Manage your account settings.\r\n          </Header.Subheader>\r\n        </Header>\r\n        <Segment stacked color='teal' raised tertiary compact>\r\n          <Label as='a' color='orange' ribbon='right' icon='power off' size='medium' content='Logout' /> \r\n          <Grid columns={2} relaxed='very' stackable>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Input\r\n                  icon='user'\r\n                  iconPosition='left'\r\n                  label='Username'\r\n                  placeholder={user.name}\r\n                />\r\n                <Form.Input\r\n                  icon='user'\r\n                  iconPosition='left'\r\n                  label='Surname'\r\n                  placeholder={user.last_name}\r\n                />\r\n                <Form.Input\r\n                  icon='mail'\r\n                  iconPosition='left'\r\n                  label='Email'\r\n                  placeholder={user.email}\r\n                  type='email'\r\n                />\r\n                <Form.Input\r\n                  icon='map marker alternate'\r\n                  iconPosition='left'\r\n                  label='Home address'\r\n                  placeholder={user.home_address}\r\n                />\r\n\r\n                {/* <Button content='Login' primary /> */}\r\n              </Form>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column verticalAlign='middle'>\r\n              <Form>\r\n              </Form>\r\n              <Button content='Update account' icon='edit' size='big' color='teal' basic />\r\n            </Grid.Column>\r\n          </Grid>\r\n\r\n          {/* <Divider vertical>Or</Divider> */}\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountSettings","import { Component } from 'react';\r\nimport { Icon, Label, Menu, Segment } from 'semantic-ui-react';\r\nimport Home from '../main/home';\r\nimport Checkout from '../main/checkout';\r\nimport MyOrders from '../main/orders';\r\nimport AccountSettings from './AccountSettings';\r\n\r\nexport default class MenuExampleSecondary extends Component {\r\n    state = {\r\n        activeItem: 'home',\r\n        orderCount: 0\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name })\r\n    }\r\n\r\n    renderItems = (active) => {\r\n        let content;\r\n        switch (active) {\r\n            case 'home':\r\n                content = <Home />;\r\n                break;\r\n            case 'checkout':\r\n                // window.location.hash = 'checkout'\r\n                content = <Checkout />;\r\n                break;\r\n            case 'orders':\r\n                content = <MyOrders />;\r\n                break;\r\n            case 'settings':\r\n                content = <AccountSettings />;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { activeItem, orderCount } = this.state\r\n        return (\r\n            <div className=\"outter-section\">\r\n                <Segment inverted basic>\r\n                    <Menu inverted pointing secondary borderless stackable>\r\n\r\n                        <Menu.Menu position='left'>\r\n                            <Menu.Item\r\n                                name='home'\r\n                                active={activeItem === 'home'}\r\n                                onClick={this.handleItemClick}\r\n                            >\r\n                                <Icon name='home' color='teal' /> Home\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n\r\n                        <Menu.Menu position='left'>\r\n                            <Menu.Item\r\n                                name='checkout'\r\n                                active={activeItem === 'checkout'}\r\n                                onClick={this.handleItemClick}\r\n                            >\r\n                                <Icon name='cart' color='teal' /> Checkout\r\n                                <Label color='teal' floating>\r\n                                    {orderCount}\r\n                                </Label>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item\r\n                                name='settings'\r\n                                active={activeItem === 'settings'}\r\n                                onClick={this.handleItemClick}\r\n                            >\r\n                                <Icon name='settings' color='teal' /> Settings\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item\r\n                                name='orders'\r\n                                active={activeItem === 'orders'}\r\n                                onClick={this.handleItemClick}\r\n                            >\r\n                                <Icon name='shopping bag' color='teal' /> My orders\r\n                                <Label circular empty color='teal' floating />\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </Menu>\r\n                </Segment>\r\n                {this.renderItems(activeItem)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Menu from '../app-components/menu';\r\n\r\n\r\nexport default class ReaOrder extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <Menu />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Card, Button, Icon, Input, Popup } from 'semantic-ui-react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nclass CreateAccount extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            last_name: '',\r\n            pass_code: '',\r\n            confirm_pass_code: '',\r\n            email_address: '',\r\n            phone_number: '',\r\n            isLoading: false,\r\n            alert: '',\r\n            redirect: false,\r\n            isMatch: false,\r\n            matchFound: false\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        const { name, last_name, pass_code, confirm_pass_code, email_address, phone_number } = this.state\r\n        const params = {\r\n            input_name: name,\r\n            input_surname: last_name,\r\n            input_password: pass_code,\r\n            input_email: email_address,\r\n            input_phone: phone_number\r\n        };\r\n\r\n        if (confirm_pass_code === pass_code) {\r\n            this.setState({ isMatch: false });\r\n            this.setState({ isLoading: true });\r\n            await Axios.post('/api/rea_order/create_account', params)\r\n                .then(async res => {\r\n                    let results = res.data;\r\n                    if (results.data) {\r\n                        const token = await results.token;\r\n                        window.localStorage.setItem('token', `${token}`)\r\n                        this.setState({ redirect: true });\r\n                        this.setState({ isLoading: false });\r\n                    } else {\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        let input = event.target.name;\r\n        if (input === 'name') {\r\n            this.setState({ name: event.target.value });\r\n        } else if (input === 'surname') {\r\n            this.setState({ last_name: event.target.value });\r\n        } else if (input === 'email') {\r\n            this.setState({ email_address: event.target.value });\r\n        } else if (input === 'phone') {\r\n            this.setState({ phone_number: event.target.value });\r\n        } else if (input === 'password') {\r\n            this.setState({ pass_code: event.target.value });\r\n        } else if (input === 'confirmPassword') {\r\n            if (event.target.value.length === this.getPasswordLength()) {\r\n                this.setState({ matchFound: true });\r\n                this.setState({ isMatch: false });\r\n            } else if (event.target.value.length !== this.getPasswordLength()) {\r\n                this.setState({ matchFound: false, isMatch: true });\r\n            }\r\n            this.setState({ isMatch: true });\r\n            this.setState({ confirm_pass_code: event.target.value });\r\n        }\r\n    }\r\n\r\n    handleRedirect = () => {\r\n\r\n    }\r\n\r\n    getPasswordLength = () => this.state.pass_code.length\r\n\r\n\r\n    renderPopUp = () => {\r\n        const { isMatch, matchFound } = this.state;\r\n        let isLoading = isMatch;\r\n        let color = 'red'\r\n        if (matchFound) {\r\n            color = 'green';\r\n            isLoading = false;\r\n        } else if (!matchFound) {\r\n            color = 'red';\r\n        }\r\n        return (\r\n            <Popup\r\n                content={<>Checking if password's <code>match: <span style={{ color: `${color}` }} >{matchFound.toString().toUpperCase()}</span></code></>}\r\n                on='click'\r\n                positionFixed\r\n                size='mini'\r\n                trigger={<Input size='mini' placeholder='Confirm password' name='confirmPassword' type='password' onChange={this.handleChange} required autoComplete='new-password' loading={isLoading} />}\r\n            />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, redirect } = this.state\r\n        if (redirect) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        return (\r\n            <div>\r\n                <Card.Group style={{ paddingTop: 110 }} centered>\r\n                    <Card color='teal'>\r\n                        <Card.Content>\r\n                            <Card.Header style={{ paddingLeft: 35, fontFamily: \"Rubik, sans-serif\", color: 'rgb(117, 117, 117)', fontWeight: 300 }}><Icon name='user' /> Create account</Card.Header>\r\n                            <Card.Description style={{ paddingLeft: 40 }}>\r\n                                <Input size='mini' placeholder='Name' name='name' type='text' onChange={this.handleChange} required />\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' placeholder='Last name' name='surname' type='text' onChange={this.handleChange} required />\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' placeholder='Email address' name='email' type='email' onChange={this.handleChange} required autoComplete='email' />\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' placeholder='Phone number' name='phone' type='cellphone' onChange={this.handleChange} required />\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' placeholder='Password' name='password' type='password' onChange={this.handleChange} required autoComplete='new-password' />\r\n                                <div className='gr'></div>\r\n                                {this.renderPopUp()}\r\n                                <div className='gr'></div>\r\n                                <div style={{ paddingLeft: 30 }}>\r\n                                    <Button content='Sign Up' loading={isLoading} circular color='teal' type='submit' onClick={this.handleSubmit} />\r\n                                </div>\r\n                            </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                            <small style={{ color: 'rgb(117, 117, 117)', paddingLeft: 50 }}>Already have an account?</small>\r\n                            <Link to='/login' ><Button fluid content='Login' icon='sign in' positive basic /></Link>\r\n\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Card.Group>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateAccount;","import React from 'react';\r\nimport { Card, Button, Icon, Input, Label, Container } from 'semantic-ui-react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport Auth from '../utils/Auth';\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pass_code: '',\r\n            email_address: '',\r\n            redirect: false,\r\n            isLoading: false,\r\n            no_input: false,\r\n        }\r\n    }\r\n\r\n    handleLogin = async () => {\r\n        const { email_address, pass_code } = this.state;\r\n        const params = {\r\n            input_password: pass_code,\r\n            input_email: email_address\r\n        };\r\n        if (params.input_email === '' || params.input_password === '') {\r\n            this.setState({ no_input: true });\r\n        } else {\r\n            this.setState({ no_input: false });\r\n            await Axios.post('/api/rea_order/login', params)\r\n                .then(async res => {\r\n                    let results = res.data;\r\n                    if (results.data) {\r\n                        window.localStorage.setItem('token', `${results.token}`);\r\n                        await Auth.check();\r\n                        this.setState({ redirect: true });\r\n                        this.setState({ isLoading: true });\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    handleOnchange = event => {\r\n        let input = event.target.name;\r\n        if (input === 'email') {\r\n            this.setState({ email_address: event.target.value });\r\n        } else if (input === 'password') {\r\n            this.setState({ pass_code: event.target.value });\r\n        }\r\n    }\r\n\r\n    renderStart = () => {\r\n        return (\r\n            <div>\r\n                <Container textAlign='center' style={{ paddingTop: 200 }}>\r\n                    <Link to='/app'>\r\n                        <Button animated circular positive basic size='large'>\r\n                            <Button.Content visible>Start Ordering!</Button.Content>\r\n                            <Button.Content hidden>\r\n                                <Icon name='arrow right' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    </Link>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderLogin = () => {\r\n        const { isLoading, no_input } = this.state;\r\n        let label;\r\n        if (no_input) {\r\n            label = <Label basic pointing prompt color='red'>\r\n                You forgot to enter details!\r\n            </Label>\r\n        }\r\n        return (\r\n            <div>\r\n                <Card.Group style={{ paddingTop: 160 }} centered>\r\n                    <Card color='teal'>\r\n                        <Card.Content>\r\n                            <Card.Header style={{ paddingLeft: 75, fontFamily: \"Rubik, sans-serif\", color: 'rgb(117, 117, 117)', fontWeight: 300 }}><Icon name='sign in' /> Login</Card.Header>\r\n                            <Card.Description style={{ paddingLeft: 40 }}>\r\n                                <Input size='mini' icon='user' iconPosition='left' placeholder='Email address' type='text' name='email' onChange={this.handleOnchange} />\r\n                                {label}\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' icon='lock' iconPosition='left' placeholder='Password' type='password' name='password' onChange={this.handleOnchange} />\r\n                                <div className='gr'></div>\r\n                                <div style={{ paddingLeft: 40 }}>\r\n                                    <Button content='Login' circular color='teal' type='submit' onClick={this.handleLogin} loading={isLoading} />\r\n                                </div>\r\n                            </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                            <small style={{ color: 'rgb(117, 117, 117)', paddingLeft: 50 }}>Don't have an account yet?</small>\r\n                            <Link to='/signup'><Button fluid content='Sign Up' icon='signup' positive basic /></Link>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Card.Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        let content;\r\n        if (redirect) {\r\n            return <Redirect to='/app' />\r\n        }\r\n\r\n        if (Auth.getAuth()) {\r\n            content = this.renderStart();\r\n        } else {\r\n            content = this.renderLogin();\r\n        }\r\n        return (\r\n            <div>\r\n                {content}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Icon, Table } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\n\r\nclass StockTable extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            stock: [],\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await Axios.get('http://localhost:5000/api/rea_order/all')\r\n            .then(res => {\r\n                if (res.data.isTrue) {\r\n                    this.setState({ stock: res.data.data });\r\n                }\r\n            });\r\n    }\r\n\r\n    renderTableItems = () => {\r\n        const { stock } = this.state;\r\n        return (\r\n            <>\r\n                {stock.map(stock => (\r\n                    <Table.Body key={stock.id}>\r\n                        <Table.Row positive >\r\n                            <Table.Cell>{stock.id}</Table.Cell>\r\n                            <Table.Cell> <Icon name='checkmark' />{stock.name}</Table.Cell>\r\n                            <Table.Cell>{stock.item_description}</Table.Cell>\r\n                            <Table.Cell><strong>R</strong> {stock.price}</Table.Cell>\r\n                            <Table.Cell>{stock.qty}</Table.Cell>\r\n                        </Table.Row>\r\n                    </Table.Body>\r\n                ))}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table celled stackable size='small' striped color='violet' selectable inverted compact>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Item description</Table.HeaderCell>\r\n                        <Table.HeaderCell>Price</Table.HeaderCell>\r\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                {this.renderTableItems()}\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StockTable;","import React from 'react';\r\nimport { Icon, Table, Checkbox } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\n\r\nclass ClientTable extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await Axios.get('http://localhost:5000/api/rea_order/users/data')\r\n            .then(async res => {\r\n                console.log(res.data);\r\n                if (res.data.isTrue) {\r\n                    this.setState({ users: await res.data.data });\r\n                };\r\n            });\r\n    }\r\n\r\n    renderTableItems = () => {\r\n        const { users } = this.state;\r\n        return (\r\n            <>\r\n                {users.map(users => (\r\n                    <Table.Body>\r\n                        <Table.Row >\r\n                            <Table.Cell>{users.id}</Table.Cell>\r\n                            <Table.Cell>{users.name}</Table.Cell>\r\n                            <Table.Cell>{users.last_name}</Table.Cell>\r\n                            <Table.Cell>{users.email}</Table.Cell>\r\n                            <Table.Cell>{users.phone_number}</Table.Cell>\r\n                            <Table.Cell>{users.home_address}</Table.Cell>\r\n                            <Table.Cell><Icon name='x' color='black' /> {users.verified.toString()}</Table.Cell>\r\n                        </Table.Row>\r\n                    </Table.Body>\r\n                ))}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Checkbox label='Filter by verification' />\r\n                \r\n                {/* <Checkbox label='Filter by verification' /> */}\r\n                <Table celled stackable size='small' selectable striped color='blue' inverted compact>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Id</Table.HeaderCell>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Last name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Email</Table.HeaderCell>\r\n                            <Table.HeaderCell>Cell number</Table.HeaderCell>\r\n                            <Table.HeaderCell>Home address</Table.HeaderCell>\r\n                            <Table.HeaderCell>Verified</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    {this.renderTableItems()}\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientTable;","import React from 'react'\r\nimport { Segment, Item, Checkbox } from 'semantic-ui-react'\r\nimport _ from 'lodash';\r\nimport { socket } from '../../global/socket-init';\r\n\r\n\r\nexport default class DividerExampleHorizontal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            active: false,\r\n            incoming: [],\r\n            status: 'No orders!',\r\n        }\r\n    }\r\n\r\n\r\n    getData = foodItems => {\r\n        console.log(foodItems);\r\n        if (foodItems.length !== 0) {\r\n            this.setState({ status: 'New orders received!' });\r\n            this.setState({ incoming: foodItems });\r\n        }\r\n    }\r\n\r\n    changeData = () => socket.emit('ordered_data');\r\n\r\n    async componentDidMount() {\r\n        socket.emit('ordered_data');\r\n        socket.on('get_data', this.getData);\r\n        socket.on('change_data', this.changeData);\r\n    }\r\n\r\n    ready = (e, { ready_id, ready_order }) => {\r\n        const { incoming } = this.state;\r\n        incoming.forEach(items => {\r\n            if (ready_id === items.id) {\r\n                console.log(items);\r\n                socket.emit('ready for collection', 'Collect order', ready_order, true, ready_id);\r\n                socket.emit('save order', items);\r\n            }\r\n        });\r\n    }\r\n\r\n    accepted = (e, { accept_id, accept_order }) => {\r\n        const { incoming } = this.state\r\n        incoming.forEach(order => {\r\n            if (accept_id === order.id) {\r\n                let query = {\r\n                    state: 'Preparing',\r\n                    orders: order\r\n                }\r\n                console.log(order);\r\n                socket.emit('accepted', query);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOrderedItems = () => {\r\n        const { incoming } = this.state;\r\n        return (\r\n            <Item.Group divided>\r\n                {_.map(incoming, (item) => (\r\n                    <Item key={item.id}>\r\n                        <Item.Content>\r\n                            <h2 style={{ color: 'rgb(117, 117, 117)', fontWeight: 300, fontSize: 30 }}>Order for: <span style={{color:'teal'}}>{item.name + ' ' + item.last_name}</span></h2>\r\n                            <Item.Header as='a'>{item.order_name}</Item.Header>\r\n                            <Item.Meta>\r\n                                <span className='cinema'>{item.order_description}</span>\r\n                            </Item.Meta>\r\n                            <Item.Description>Total: R{item.order_cost}</Item.Description>\r\n                            <Item.Meta>\r\n                                <code>Order id: <span style={{color:'blue'}}>{item.order_id}</span></code>\r\n                            </Item.Meta>\r\n                            <Item.Extra>\r\n                                <Checkbox name='accept' accept_id={item.id} accept_order={item.order_id} onClick={this.accepted} label='Accept' />\r\n                                <Checkbox name='ready' ready_id={item.id} ready_order={item.order_id} onClick={this.ready} label='Done!' />\r\n                            </Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n                ))}\r\n            </Item.Group>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Segment basic textAlign='center'>\r\n                    {/* <h1>Rea Order Manager </h1> */}\r\n                    <h3 style={{ color: 'rgb(117, 117, 117)', fontWeight: 300, fontSize: 30 }}>{this.state.status}</h3>\r\n\r\n                    {/* <Divider horizontal>\r\n                        <Header as='h4'>\r\n                            <Icon name='list ul' />\r\n                            Incoming orders\r\n                        </Header>\r\n                    </Divider> */}\r\n\r\n                </Segment>\r\n                <div className='items newOrders'>\r\n                    <pre style={{ height: 250, overflowY: 'scroll' }}>\r\n                        {this.renderOrderedItems()}\r\n                    </pre>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Checkbox,\r\n    Form,\r\n    Input,\r\n    Radio,\r\n    TextArea,\r\n    Button,\r\n    Message\r\n} from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass UpdateStockForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            qty: 0,\r\n            name: '',\r\n            description: '',\r\n            price: 0,\r\n            isNew: false,\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e, { qty }) => {\r\n        console.log(qty);\r\n        this.setState({ qty: Number(qty) });\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        let input = event.target.name;\r\n        if (input === 'name') {\r\n            this.setState({ name: event.target.value });\r\n        } else if (input === 'price') {\r\n            this.setState({ price: Number(event.target.value) });\r\n        } else if (input === 'description') {\r\n            this.setState({ description: event.target.value });\r\n        }\r\n    }\r\n\r\n    handleAddButton = async () => {\r\n        const { qty, name, description, price } = this.state;\r\n        const params = {\r\n            qty, name, description, price\r\n        }\r\n        await Axios.post('http://localhost:5000/api/rea_order/add/stock', params)\r\n            .then(res => {\r\n                console.log(res.data.status);\r\n                this.setState({ message: res.data.status });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { qty, message } = this.state\r\n        let content;\r\n        if (message === 'Stock was successfuly updated.') {\r\n            content = <Message success header={message} content='You can now update the quantity of this meal in stock' />\r\n        } else if (message === 'Stock quantity successfuly updated.') {\r\n            content = <Message success header={message} content='You can now update the quantity of this meal in stock' />\r\n        }\r\n        return (\r\n            <div>\r\n                {content}\r\n                <Form>\r\n                    <Form.Group widths='equal'>\r\n                        <Form.Field control={Input} label='Meal name' placeholder='Name of the meal' name='name' onChange={this.handleInputChange} />\r\n                        <Form.Field control={Input} label='Price tag' placeholder='Meal price tag' type='number' name='price' onChange={this.handleInputChange} />\r\n                    </Form.Group>\r\n                    <Form.Group grouped>\r\n                        <label>Meal quantity</label>\r\n                        <Form.Field control={Radio} label='One' qty='1' checked={qty === '1'} onChange={this.handleChange} />\r\n                        <Form.Field control={Radio} label='Five' qty='5' checked={qty === '5'} onChange={this.handleChange} />\r\n                        <Form.Field control={Radio} label='Ten' qty='10' checked={qty === '10'} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Field control={TextArea} label='Meal description' placeholder='Add what is in the meal...' name='description' onChange={this.handleInputChange} />\r\n                    <Form.Field control={Checkbox} label='New meal?' />\r\n                    <Button content=\"Add item\" labelPosition='right' icon='checkmark' positive onClick={this.handleAddButton} />\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateStockForm","import React, { Component } from 'react'\r\nimport { Menu, Icon, Button, Modal } from 'semantic-ui-react'\r\nimport StockTable from './StockTable';\r\nimport ClientTable from './ClientTable';\r\nimport ActiveOrders from './ActiveOrders';\r\nimport UpdateStockForm from './UpdateStockForm';\r\n\r\nclass Dashbord extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activeItem: 'Stock',\r\n            open: false\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handleItemClick = (e, { name }) => {\r\n        this.setState({ activeItem: name });\r\n    }\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    close = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    renderHtmlContent = (active) => {\r\n        let content;\r\n        switch (active) {\r\n            case 'Stock':\r\n                content = <StockTable />\r\n                break;\r\n            case 'Available stock':\r\n                content = ''\r\n                break;\r\n            case 'Active orders':\r\n                content = <ActiveOrders />\r\n                break;\r\n            case 'Finished orders':\r\n                content = ''\r\n                break;\r\n            case 'Users':\r\n                content = <ClientTable />\r\n                break;\r\n            case 'Connected users':\r\n                content = ''\r\n                break;\r\n            case 'Verified users':\r\n                content = ''\r\n                break;\r\n            case 'Profit':\r\n                content = ''\r\n                break;\r\n            case 'Cash':\r\n                content = ''\r\n                break;\r\n            case 'Bought':\r\n                content = ''\r\n                break;\r\n            case 'Admin profile':\r\n                content = ''\r\n                break;\r\n            case 'App settings':\r\n                content = ''\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n\r\n    renderMenu = () => {\r\n        const { activeItem } = this.state;\r\n        return (\r\n            <Menu vertical>\r\n                <Menu.Item>\r\n                    <Menu.Header>Products</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Stock' active={activeItem === 'Stock'} onClick={this.handleItemClick} />\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Menu.Header>Orders</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Active orders' active={activeItem === 'Active orders'} onClick={this.handleItemClick}>\r\n                        </Menu.Item>\r\n                        <Menu.Item name='Finished orders' active={activeItem === 'Finished orders'} onClick={this.handleItemClick}>\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Menu.Header>Clients</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Users' active={activeItem === 'Users'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Connected users' active={activeItem === 'Connected users'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Verified users' active={activeItem === 'Verified users'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Not verified users' active={activeItem === 'Not verified users'} onClick={this.handleItemClick} />\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Menu.Header>Market</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Profit' active={activeItem === 'Profit'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Cash' active={activeItem === 'Cash'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Bought' active={activeItem === 'Bought'} onClick={this.handleItemClick} />\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Menu.Header>Settings</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Admin profile' active={activeItem === 'Admin profile'} onClick={this.handleItemClick}>\r\n                            Admin profile\r\n                        </Menu.Item>\r\n                        <Menu.Item name='App settings' active={activeItem === 'App settings'} onClick={this.handleItemClick}>\r\n                            App settings\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    renderUpdateStockModal = () => {\r\n        const { open } = this.state;\r\n        return (\r\n            <Modal open={open}>\r\n                <Modal.Header>Add stock</Modal.Header>\r\n                <Modal.Content scrolling>\r\n                    <UpdateStockForm />\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button secondary floated='right' compact onClick={this.close} labelPosition='right' icon='x' content='Close' />\r\n                </Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        const { activeItem } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='container-fluid'>\r\n                    <div className='row'>\r\n                        <nav className='col-md-2 d-none d-md-block'>\r\n                            <div className='sidebar-sticky'>\r\n                                {this.renderMenu()}\r\n                            </div>\r\n                        </nav>\r\n                        <main role='main' className='col-md-9 ml-sm-auto col-lg-10 pt-3 px-4' >\r\n                            <div className='d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom'>\r\n                                <h1 style={{ color: 'rgb(117, 117, 117)', fontWeight: 300, fontSize: 40 }} className='h2'>Dashbord <Icon name='dashboard' /> </h1>\r\n                                <div className='btn-toolbar mb-2 mb-md-0'>\r\n                                    <div className='btn-group mr-2'>\r\n                                        <Button attached='left' secondary basic onClick={this.open}>Add stock</Button>\r\n                                        {/* <Button attached='right' secondary basic></Button> */}\r\n                                    </div>\r\n                                    {/* <Button content='This week' basic secondary className='btn btn-sm btn-outline-secondary dropdown-toggle' ></Button> */}\r\n                                </div>\r\n                            </div>\r\n                            <h2 style={{ color: 'rgb(117, 117, 117)', fontWeight: 300, fontSize: 30 }} className='h2'>{activeItem}</h2>\r\n                            <div className=''>\r\n                                {this.renderHtmlContent(activeItem)}\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </div>\r\n                {this.renderUpdateStockModal()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Dashbord };","import React, { Component } from 'react'\r\nimport { Menu, Input, Icon } from 'semantic-ui-react';\r\nimport { Dashbord } from './Dashbord';\r\n\r\n\r\n\r\nexport default class MenuExampleInvertedSecondary extends Component {\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Menu inverted secondary borderless pointing color='grey' stackable>\r\n          <Menu.Item\r\n            name='home'\r\n            active={activeItem === 'home'}\r\n            onClick={this.handleItemClick}>\r\n            <Icon name='home' color='black' size='large' />Admin\r\n          </Menu.Item>\r\n\r\n          <Menu.Item position='right'>\r\n            <Input placeholder='Search...' />\r\n          </Menu.Item>\r\n\r\n          <Menu.Item\r\n            position='right'\r\n            name='logout'\r\n            active={activeItem === 'logout'}\r\n            onClick={this.handleItemClick}>\r\n            <Icon name='log out' size='large' color='black' /> Logout\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Dashbord />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Menu from './components/AdminMenu';\r\n\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Menu />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ReaOrderApp from './App/ReaOrder';\r\n// import Checkout from './main/checkout';\r\nimport createAccount from './pages/createAccount';\r\nimport Login from './pages/logIn';\r\nimport Auth from './utils/Auth';\r\nimport Admin from './admin/Main';\r\n\r\nconst Router = (props) => (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route exact path='/signup' component={createAccount} />\r\n            <Route exact path='/login' component={Login} />\r\n            <PrivateRoute exact path='/app' component={ReaOrderApp} />\r\n            <Route exact path='/admin' component={Admin} />\r\n        </Switch>\r\n    </HashRouter>\r\n)\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            Auth.getAuth() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default Router;","import './App.css';\nimport React from 'react';\nimport Router from './Router';\nimport { SocketConnection } from './global/socket-init';\nimport Auth from './utils/Auth';\n\n\nexport default class App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      auth: false,\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ auth: await Auth.check() });\n  }\n\n  render() {\n    return (\n      <div>\n        <SocketConnection />\n        <Router />\n      </div>\n\n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}