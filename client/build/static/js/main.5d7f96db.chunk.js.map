{"version":3,"sources":["functions/Calculations.js","functions/PlaceOrders.js","functions/Checkout.js","utils/Auth.js","main/home.jsx","global/socket-init.js","main/checkout.jsx","main/orders.jsx","app-components/AccountSettings.jsx","app-components/menu.jsx","App/ReaOrder.jsx","pages/createAccount.jsx","pages/logIn.jsx","admin/components/StockTable.jsx","admin/components/ClientTable.jsx","admin/components/ActiveOrders.jsx","admin/components/UpdateStockForm.jsx","admin/components/Dashbord.jsx","admin/components/AdminMenu.jsx","admin/Main.jsx","Router.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","total","totalCost","price","qty","increament","decreament","getToal","init","orderPrice","orderQty","getPriceTotal","orderCost","resetCounter","getQty","orders","place","userOrder","push","send","getTotal","add","order","forEach","item","Number","Auth","isAuthenticated","client_id","token","check","jwt","window","localStorage","getItem","getToken","console","log","Axios","post","then","res","data","response","this","getAuth","getClientId","Calculations","require","PlaceOrders","calculations","placeOrder","optionsList","key","text","value","label","color","empty","circular","icon","CardExampleGroupCentered","handleOrders","e","a","id","params","setState","open","axios","orderId","orderName","name","orderDescription","item_description","toFixed","closeModal","state","description","count","counter","user_id","setItem","JSON","stringify","redirect","orderTotal","isDisabled","out_of_stock","visble","cancelOrder","handleFilter","event","renderModal","message","Message","warning","header","Modal","centered","size","dimmer","Header","Content","Description","Actions","Button","floated","onClick","disabled","Icon","basic","content","secondary","negative","attached","items","get","Segment","Group","horizontal","inverted","style","fontWeight","fontSize","Dropdown","options","fluid","multiple","selection","compact","onChange","className","Card","itemsPerRow","stackable","doubling","map","Meta","React","Component","socket","socketIOClient","SocketConnection","endpoint","chekout","Checkout","StickyExampleActive","props","handleOrderButton","food_data","emit","status","removeItem","renderOrderInfo","length","paddingLeft","renderOrderButton","positive","renderItems","renderOrderList","_","paddingBottom","isLoading","jsonData","parse","textAlign","Grid","columns","relaxed","Column","paddingTop","verticalAlign","MyOrders","ordersList","config","headers","on","error","Image","Loader","active","is_done","order_cost","time_stamp","Label","order_state","Divider","as","renderActiveCardOrders","to","AccountSettings","user","dividing","src","last_name","Subheader","stacked","raised","tertiary","ribbon","Form","Input","iconPosition","placeholder","email","type","home_address","MenuExampleSecondary","activeItem","orderCount","handleItemClick","Menu","pointing","borderless","position","Item","floating","ReaOrder","CreateAccount","handleSubmit","pass_code","confirm_pass_code","email_address","phone_number","input_name","input_surname","input_password","input_email","input_phone","isMatch","results","handleChange","input","target","getPasswordLength","matchFound","renderPopUp","Popup","toString","toUpperCase","positionFixed","trigger","required","autoComplete","loading","alert","fontFamily","extra","Login","handleLogin","no_input","handleOnchange","renderStart","Container","animated","visible","hidden","renderLogin","prompt","StockTable","renderTableItems","stock","Table","Body","Row","Cell","isTrue","celled","striped","selectable","HeaderCell","ClientTable","users","verified","Checkbox","DividerExampleHorizontal","getData","foodItems","incoming","changeData","ready","ready_id","ready_order","accepted","accept_id","query","renderOrderedItems","divided","order_name","order_description","order_id","Extra","height","overflowY","UpdateStockForm","handleInputChange","handleAddButton","isNew","success","widths","Field","control","grouped","Radio","checked","TextArea","labelPosition","Dashbord","close","renderHtmlContent","renderMenu","vertical","renderUpdateStockModal","scrolling","role","MenuExampleInvertedSecondary","Main","PrivateRoute","component","rest","render","pathname","Router","exact","path","createAccount","ReaOrderApp","Admin","App","auth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5d7f96db.chunk.js","sourcesContent":["module.exports = () => {\r\n    let total = 1;\r\n    let totalCost = 0;\r\n    let price = 0;\r\n    let qty = 0;\r\n\r\n    const increament = () => {\r\n        totalCost += price;\r\n        total += 1;\r\n        qty -= 1;\r\n    }\r\n\r\n    const orderCost = () => totalCost;\r\n\r\n    const decreament = () => {\r\n        totalCost -= price;\r\n        total -= 1;\r\n        qty += 1;\r\n    }\r\n\r\n    const init = (orderPrice, orderQty) => {\r\n        if (orderPrice !== '') {\r\n            totalCost = orderPrice;\r\n            price = orderPrice;\r\n            qty = orderQty - 1;\r\n        }\r\n    }\r\n\r\n    const getPriceTotal = () => price;\r\n\r\n    const getToal = () => total;\r\n\r\n    const resetCounter = () => {\r\n        return total = 1;\r\n    }\r\n\r\n    const getQty = () => qty;\r\n\r\n\r\n    return {\r\n        increament,\r\n        decreament,\r\n        getToal,\r\n        init,\r\n        getPriceTotal,\r\n        orderCost,\r\n        resetCounter,\r\n        getQty\r\n    }\r\n}","module.exports = () => {\r\n    let orders = [];\r\n\r\n    const placeOrder = (userOrder) => {\r\n        orders.push(userOrder);\r\n    }\r\n\r\n    const getOrders = () => {\r\n        return orders;\r\n    }\r\n\r\n    return {\r\n        place: placeOrder,\r\n        send: getOrders,\r\n    }\r\n}","module.exports = () => {\r\n    let total = 0;\r\n\r\n    const add = (order) => {\r\n        if (order !== null) {\r\n            order.forEach(item => {\r\n                total += Number(item.price);\r\n            });\r\n        } else {\r\n            total = 0;\r\n        }\r\n    }\r\n\r\n    const getTotal = () => {\r\n        return total;\r\n    }\r\n\r\n\r\n    return {\r\n        getTotal,\r\n        add,\r\n    }\r\n}","import Axios from \"axios\";\r\n\r\nconst Auth = {\r\n    isAuthenticated: false,\r\n    client_id: 0,\r\n    token: '',\r\n\r\n    async check() {\r\n        try {\r\n            let jwt = {\r\n                token: '',\r\n            };\r\n            jwt.token = window.localStorage.getItem('token');\r\n            const getToken = window.localStorage.getItem('token');\r\n            console.log(jwt.token !== '');\r\n            console.log(getToken + \" getting token\");\r\n            if (jwt.token !== '') {\r\n                await Axios.post('/api/rea_order/verify', jwt)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        this.isAuthenticated = res.data.response;\r\n                        this.client_id = res.data.client_id;\r\n                        this.token = res.data.token;\r\n                    });\r\n            };\r\n        } catch (error) {\r\n\r\n        };\r\n    },\r\n\r\n    getToken() {\r\n        return this.token;\r\n    },\r\n    getAuth() {\r\n        return this.isAuthenticated;\r\n    },\r\n    getClientId() {\r\n        return this.client_id;\r\n    }\r\n\r\n};\r\n\r\nexport default Auth;","import React from 'react';\r\nimport Auth from '../utils/Auth';\r\nimport { Card, Button, Modal, Icon, Message, Label, Segment, Dropdown, Advertisement } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nconst Calculations = require('../functions/Calculations');\r\nconst PlaceOrders = require('../functions/PlaceOrders');\r\n\r\nconst calculations = Calculations();\r\nconst placeOrder = PlaceOrders();\r\nconst optionsList = [\r\n    {\r\n        key: 'Kota',\r\n        text: 'Kota',\r\n        value: 'Kota',\r\n        label: { color: 'red', empty: true, circular: true },\r\n    },\r\n    {\r\n        key: 'Dagwood',\r\n        text: 'Dagwood',\r\n        value: 'Dagwood',\r\n        label: { color: 'blue', empty: true, circular: true },\r\n    },\r\n    {\r\n        key: 'Large meals',\r\n        text: 'Large meals',\r\n        value: 'Large meals',\r\n        label: { circular: true, icon: 'food' },\r\n    },\r\n    {\r\n        key: 'Small meals',\r\n        text: 'Small meals',\r\n        value: 'Small meals',\r\n        label: { circular: true, icon: 'food' },\r\n    },\r\n    {\r\n        key: 'Low price',\r\n        text: 'Low price',\r\n        value: 'Low price',\r\n        label: { circular: true, icon: 'money bill alternate' },\r\n    },\r\n    {\r\n        key: 'High price',\r\n        text: 'High price',\r\n        value: 'High price',\r\n        label: { circular: true, icon: 'money bill alternate' },\r\n    },\r\n]\r\nexport default class CardExampleGroupCentered extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            items: [],\r\n            open: false,\r\n            isDisabled: true,\r\n            res: '',\r\n            orders: [],\r\n            counter: 1,\r\n            orderId: 0,\r\n            orderName: '',\r\n            orderDescription: '',\r\n            orderPrice: '',\r\n            out_of_stock: false,\r\n            visble: false\r\n        };\r\n    }\r\n\r\n    handleOrders = async (e, { id }) => {\r\n        try {\r\n            const params = { id: id };\r\n            if (id) {\r\n                this.setState({ open: true });\r\n                await axios.post('/api/rea_order/get_order', params)\r\n                    .then(res => {\r\n                        let data = res.data.data;\r\n                        calculations.init(Number(data.price), res.data.data.qty);\r\n                        this.setState({\r\n                            orders: [data],\r\n                            orderId: data.id,\r\n                            orderName: data.name,\r\n                            orderDescription: data.item_description,\r\n                            orderPrice: calculations.getPriceTotal().toFixed(2),\r\n                        });\r\n                    });\r\n            };\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        const { orderId, orderName, orderDescription, orderPrice, counter } = this.state;\r\n        let orders = {\r\n            id: orderId,\r\n            name: orderName,\r\n            description: orderDescription,\r\n            price: orderPrice,\r\n            count: counter,\r\n            user_id: Auth.getClientId()\r\n        };\r\n        placeOrder.place(orders);\r\n        window.localStorage.setItem('user_order', JSON.stringify(placeOrder.send()));\r\n        this.setState({\r\n            open: false,\r\n            counter: calculations.resetCounter(),\r\n            redirect: true,\r\n        });\r\n    }\r\n\r\n    increament = () => {\r\n        calculations.increament()\r\n        let orderTotal = calculations.orderCost();\r\n        let total = calculations.getToal();\r\n        let qty = calculations.getQty();\r\n        this.setState({\r\n            counter: total,\r\n            orderPrice: orderTotal.toFixed(2),\r\n        });\r\n        if (total > 1) {\r\n            this.setState({ isDisabled: false });\r\n        }\r\n        if (qty === 0) {\r\n            this.setState({ out_of_stock: true, visble: true });\r\n        }\r\n    }\r\n\r\n    decreament = () => {\r\n        calculations.decreament();\r\n        let orderTotal = calculations.orderCost();\r\n        let total = calculations.getToal();\r\n        let qty = calculations.getQty();\r\n        this.setState({\r\n            counter: total,\r\n            orderPrice: orderTotal.toFixed(2),\r\n        });\r\n        if (total === 1) {\r\n            this.setState({ isDisabled: true });\r\n        };\r\n        if (qty !== 0) {\r\n            this.setState({ out_of_stock: false, visble: false });\r\n        };\r\n    }\r\n\r\n    cancelOrder = () => {\r\n        this.setState({\r\n            open: false,\r\n            counter: calculations.resetCounter(),\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await axios.get('/api/rea_order/all')\r\n                .then(response => {\r\n                    let results = response.data;\r\n                    let data = results.data;\r\n                    this.setState({ items: data });\r\n                });\r\n        } catch (error) {\r\n\r\n        };\r\n    }\r\n\r\n    handleFilter = event => {\r\n        console.log(event);\r\n    }\r\n\r\n    renderModal = () => {\r\n        const { orderName, orderDescription, orderPrice, isDisabled, counter, open, out_of_stock, visble } = this.state;\r\n        let message;\r\n        if (visble) {\r\n            message = <Message warning header={`Sorry the ${orderName} out of stock.`} />\r\n        } else if (!visble) {\r\n            message = ''\r\n        }\r\n        return (\r\n            <Modal centered={false} open={open} size='small' dimmer='blurring'>\r\n                <Modal.Header>{orderName}</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>{orderDescription}</Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button icon circular floated='left' count={counter} onClick={this.decreament} disabled={isDisabled}>\r\n                        <Icon name='minus' />\r\n                    </Button>\r\n                    <Button basic floated='left'>{counter}</Button>\r\n                    <Button icon circular floated='left' count={counter} price={orderPrice} onClick={this.increament} disabled={out_of_stock}>\r\n                        <Icon name='plus' />\r\n                    </Button>\r\n                    <Button circular onClick={this.closeModal} content={`Add ${counter} to order R${orderPrice}`} secondary />\r\n                </Modal.Actions>\r\n                {message}\r\n                <Button content='Cancel order' negative attached='top' onClick={this.cancelOrder} />\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.state;\r\n        return (\r\n            <div>\r\n                <Segment.Group horizontal size='small'>\r\n                    <Segment inverted color='teal'><p style={{ fontWeight: 300, fontSize: 20 }}>Food menu <Icon name='food' size='small' /></p></Segment>\r\n                    <Segment inverted color='teal'>\r\n                        <Dropdown text='Filter food menu' icon='filter' options={optionsList} fluid multiple selection name='filter' compact onChange={this.handleFilter} />\r\n                    </Segment>\r\n                    {/* <Segment inverted color='teal'>Bottom</Segment> */}\r\n                </Segment.Group>\r\n                <hr className='hb' />\r\n                {/* <Advertisement unit='panorama' test='Advertisement' centered /> */}\r\n                <Card.Group itemsPerRow={3} stackable centered doubling>\r\n                    {items.map((item) => (\r\n                        <Card key={item.id} id={item.id} onClick={this.handleOrders} color='teal' >\r\n                            <Card.Content>\r\n                                <Card.Header>{item.name}</Card.Header>\r\n                                <Card.Description>\r\n                                    {item.item_description}\r\n                                </Card.Description>\r\n                                <Card.Meta><Icon name='money bill alternate' /> R {item.price}</Card.Meta>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    ))}\r\n                </Card.Group>\r\n                {this.renderModal()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nconst socket = socketIOClient();\r\nclass SocketConnection extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            endpoint: \"http://localhost:5000\",\r\n        }\r\n        // socket = socketIOClient(this.state.endpoint);\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport { SocketConnection, socket };","import { socket } from '../global/socket-init';\r\nimport _ from 'lodash';\r\nimport { Component } from 'react';\r\nimport { Grid, Segment, Button } from 'semantic-ui-react';\r\nconst Checkout = require('../functions/Checkout');\r\n\r\n\r\n\r\nconst chekout = Checkout();\r\nexport default class StickyExampleActive extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: false,\r\n            food_data: [],\r\n            status: 'Your items'\r\n        };\r\n    }\r\n\r\n    handleOrderButton = () => {\r\n        const { food_data } = this.state;\r\n        let params = { food_data };\r\n        socket.emit('add order', params.food_data);\r\n        this.setState({ food_data: [], status: 'Your order is sent.' });\r\n        window.localStorage.removeItem('user_order');\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.emit('initial_data');\r\n        const jsonData = window.localStorage.getItem('user_order');\r\n        const data = JSON.parse(jsonData);\r\n        chekout.add(data);\r\n        if (data === null) {\r\n            this.setState({ status: 'Your cart is empty!', food_data: [] });\r\n        } else {\r\n            this.setState({ food_data: data });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        chekout.add(null);\r\n    }\r\n\r\n    renderOrderInfo = () => {\r\n        const { food_data } = this.state;\r\n        let content;\r\n        if (food_data.length !== 0) {\r\n            content = <div>\r\n                <div className='infoMsg'>\r\n                    <span className='hs'>If you don't come to pick up your order we will try calling.</span>\r\n                </div>\r\n                <hr className='hb' />\r\n                <ul>\r\n                    <li className='d6 cc'>\r\n                        <div>\r\n                            <div className='cc'>Subtotal\r\n                                <span style={{ paddingLeft: 120 }} className='cost'>R {chekout.getTotal()},00</span>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='gr'></li>\r\n                    <li className='gr'></li>\r\n                </ul>\r\n                <hr className='hb' />\r\n                <div className='d6'>\r\n                    <div style={{ color: 'black' }}>Total\r\n                        <span style={{ paddingLeft: 130 }}>R {chekout.getTotal()},00</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        } else {\r\n            content = '';\r\n        }\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n\r\n    renderOrderButton = () => {\r\n        const { food_data } = this.state;\r\n        let content;\r\n        if (food_data.length !== 0) {\r\n            content = <Button onClick={this.handleOrderButton} className='orderBtn' positive>\r\n                Place order\r\n            </Button>\r\n        } else {\r\n            content = '';\r\n        }\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n\r\n    renderItems = () => {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    <li className='d6 cc'>\r\n                        <div>\r\n                            <div className='cc'>Subtotal\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='gr'></li>\r\n                    <li className='d6 cc'>\r\n                        <div>\r\n                            <div className='cc'>Service\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='gr'></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderOrderList = () => {\r\n        const { food_data } = this.state;\r\n        return (\r\n            <div>\r\n                {_.map(food_data, (item) => (\r\n                    <div key={item.id} style={{ paddingLeft: 30, paddingBottom: 40 }} className='orderContainer'>\r\n                        <h4 className='orderHeader'>{item.name} <span>(R {item.price})</span></h4>\r\n                        <ul>\r\n                            <li>{item.description}</li>\r\n                        </ul>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { status } = this.state\r\n        return (\r\n            <Segment basic textAlign='left'>\r\n                <Grid columns={2} relaxed='very' stackable>\r\n                    <Grid.Column>\r\n                        <div><h1 className='blg'>Kota House, Vosloorus</h1></div>\r\n                        <hr className='hb' />\r\n                        <div><h3 className=''>{status}</h3></div>\r\n                        <div style={{ paddingTop: 15, paddingLeft: 5 }}>\r\n                            {/* {this.renderItems()} */}\r\n                            {this.renderOrderList()}\r\n                        </div>\r\n                    </Grid.Column>\r\n\r\n                    <Grid.Column verticalAlign='middle' >\r\n                        {this.renderOrderButton()}\r\n                        {this.renderOrderInfo()}\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Divider, Header, Icon, Loader, Card, Image, Label } from 'semantic-ui-react';\r\nimport { socket } from '../global/socket-init';\r\nimport _ from 'lodash';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Auth from '../utils/Auth';\r\nimport Axios from 'axios';\r\n\r\nexport default class MyOrders extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            ordersList: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            let config = {\r\n                headers: {\r\n                    'Authorization': `bearer:${Auth.getToken()}`\r\n                }\r\n            }\r\n            socket.emit('get orders');\r\n            socket.on('data', async () => {\r\n                Axios.get('/api/rea_order/get/active_order', config)\r\n                    .then(res => {\r\n                        this.setState({ ordersList: res.data.data });\r\n                    });\r\n            });\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    renderActiveCardOrders() {\r\n        const { ordersList } = this.state;\r\n        return (\r\n            <div>\r\n                <Card.Group centered stackable>\r\n                    {_.map(ordersList, (orders) => (\r\n                        <Card key={orders.id} color='teal'>\r\n                            <Card.Content>\r\n                                <Image floated='right'>\r\n                                    <Loader active={orders.is_done} size='small' />\r\n                                </Image>\r\n                                <Card.Header>{orders.name}</Card.Header>\r\n                                <Card.Meta><Icon name='money bill alternate' /> R {orders.order_cost}</Card.Meta>\r\n                                <Card.Description>\r\n                                    <strong>{orders.item_description}</strong>\r\n                                </Card.Description>\r\n                                <hr className='hb' />\r\n                                <Card.Meta>Time: {`${orders.time_stamp}`}</Card.Meta>\r\n                                <Card.Meta>Order count: {orders.count}</Card.Meta>\r\n                                <Card.Meta>Order id: {orders.id}</Card.Meta>\r\n                            </Card.Content>\r\n                            <Label attached='bottom right' content={orders.order_state} color='teal' />\r\n                        </Card>\r\n                    ))}\r\n                </Card.Group>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!Auth.getAuth()) {\r\n            return <Redirect to='/login' />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className='currentOrders'>\r\n                    <Divider horizontal>\r\n                        <Header as='h4' color='teal'>\r\n                            My orders\r\n                            <Icon color='teal' name='alarm' />\r\n                        </Header>\r\n                    </Divider>\r\n                    {this.renderActiveCardOrders()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Header, Image, Button, Grid, Form, Segment, Label } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\nimport Auth from '../utils/Auth';\r\n\r\nclass AccountSettings extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      user: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let config = {\r\n      headers: {\r\n        'Authorization': `bearer:${Auth.getToken()}`\r\n      }\r\n    };\r\n    try {\r\n      await Axios.get('/api/rea_order/user', config)\r\n        .then(res => {\r\n          this.setState({ user: res.data.data });\r\n        });\r\n    } catch (error) {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n    return (\r\n      <div>\r\n        <Header as='h2' dividing>\r\n          <Image circular src='./logo512.png' /> <span style={{ color: 'teal', fontWeight: 300, fontSize: 20 }}>{user.name + ' ' + user.last_name}</span>\r\n          <Header.Subheader>\r\n            Manage your account settings.\r\n          </Header.Subheader>\r\n        </Header>\r\n        <Segment stacked color='teal' raised tertiary compact>\r\n          <Label as='a' color='orange' ribbon='right' icon='power off' size='medium' content='Logout' />\r\n          <Grid columns={2} relaxed='very' stackable>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Input icon='user' iconPosition='left' label='Username' placeholder={user.name} />\r\n                <Form.Input icon='user' iconPosition='left' label='Surname' placeholder={user.last_name}/>\r\n                <Form.Input icon='mail' iconPosition='left' label='Email' placeholder={user.email} type='email'/>\r\n                <Form.Input icon='map marker alternate' iconPosition='left' label='Home address' placeholder={user.home_address}/>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column verticalAlign='middle'>\r\n              <Button content='Update account' icon='edit' size='big' color='teal' basic />\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountSettings","import { Component } from 'react';\r\nimport { Icon, Label, Menu, Segment } from 'semantic-ui-react';\r\nimport Home from '../main/home';\r\nimport Checkout from '../main/checkout';\r\nimport MyOrders from '../main/orders';\r\nimport AccountSettings from './AccountSettings';\r\n\r\nexport default class MenuExampleSecondary extends Component {\r\n    state = {\r\n        activeItem: 'home',\r\n        orderCount: 0\r\n    };\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n    renderItems = (active) => {\r\n        let content;\r\n        switch (active) {\r\n            case 'home':\r\n                content = <Home />;\r\n                break;\r\n            case 'checkout':\r\n                content = <Checkout />;\r\n                break;\r\n            case 'orders':\r\n                content = <MyOrders />;\r\n                break;\r\n            case 'settings':\r\n                content = <AccountSettings />;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { activeItem, orderCount } = this.state;\r\n        return (\r\n            <div className=\"outter-section\">\r\n                <Segment inverted basic>\r\n                    <Menu inverted pointing secondary borderless stackable>\r\n                        <Menu.Menu position='left'>\r\n                            <Menu.Item name='home' active={activeItem === 'home'} onClick={this.handleItemClick}>\r\n                                <Icon name='home' color='teal' /> Home\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n\r\n                        <Menu.Menu position='left'>\r\n                            <Menu.Item name='checkout' active={activeItem === 'checkout'} onClick={this.handleItemClick}>\r\n                                <Icon name='cart' color='teal' /> Checkout\r\n                                <Label color='teal' floating>\r\n                                    {orderCount}\r\n                                </Label>\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item name='settings' active={activeItem === 'settings'} onClick={this.handleItemClick}>\r\n                                <Icon name='settings' color='teal' /> Settings\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n\r\n                        <Menu.Menu position='right'>\r\n                            <Menu.Item name='orders' active={activeItem === 'orders'} onClick={this.handleItemClick}>\r\n                                <Icon name='shopping bag' color='teal' /> My orders\r\n                                <Label circular empty color='teal' floating />\r\n                            </Menu.Item>\r\n                        </Menu.Menu>\r\n                    </Menu>\r\n                </Segment>\r\n                {this.renderItems(activeItem)}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Menu from '../app-components/menu';\r\n\r\n\r\nexport default class ReaOrder extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='container'><Menu /></div>\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport { Card, Button, Icon, Input, Popup } from 'semantic-ui-react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nclass CreateAccount extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            last_name: '',\r\n            pass_code: '',\r\n            confirm_pass_code: '',\r\n            email_address: '',\r\n            phone_number: '',\r\n            isLoading: false,\r\n            alert: '',\r\n            redirect: false,\r\n            isMatch: false,\r\n            matchFound: false\r\n        }\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        try {\r\n            const { name, last_name, pass_code, confirm_pass_code, email_address, phone_number } = this.state\r\n            const params = {\r\n                input_name: name, input_surname: last_name, input_password: pass_code, input_email: email_address, input_phone: phone_number\r\n            };\r\n\r\n            if (confirm_pass_code === pass_code) {\r\n                this.setState({ isMatch: false });\r\n                this.setState({ isLoading: true });\r\n                await Axios.post('/api/rea_order/create_account', params)\r\n                    .then(async res => {\r\n                        console.log(res.data);\r\n                        let results = res.data;\r\n                        if (results.data) {\r\n                            const token = await results.token;\r\n                            window.localStorage.setItem('token', `${token}`)\r\n                            this.setState({ redirect: true });\r\n                            this.setState({ isLoading: false });\r\n                        } else {\r\n                            this.setState({ isLoading: false });\r\n                        }\r\n                    });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        let input = event.target.name;\r\n        if (input === 'name') {\r\n            this.setState({ name: event.target.value });\r\n        } else if (input === 'surname') {\r\n            this.setState({ last_name: event.target.value });\r\n        } else if (input === 'email') {\r\n            this.setState({ email_address: event.target.value });\r\n        } else if (input === 'phone') {\r\n            this.setState({ phone_number: event.target.value });\r\n        } else if (input === 'password') {\r\n            this.setState({ pass_code: event.target.value });\r\n        } else if (input === 'confirmPassword') {\r\n            if (event.target.value.length === this.getPasswordLength()) {\r\n                this.setState({ matchFound: true });\r\n                this.setState({ isMatch: false });\r\n            } else if (event.target.value.length !== this.getPasswordLength()) {\r\n                this.setState({ matchFound: false, isMatch: true });\r\n            }\r\n            this.setState({ isMatch: true });\r\n            this.setState({ confirm_pass_code: event.target.value });\r\n        }\r\n    }\r\n\r\n    getPasswordLength = () => this.state.pass_code.length\r\n\r\n    renderPopUp = () => {\r\n        const { isMatch, matchFound } = this.state;\r\n        let isLoading = isMatch;\r\n        let color = 'red'\r\n        if (matchFound) {\r\n            color = 'green';\r\n            isLoading = false;\r\n        } else if (!matchFound) {\r\n            color = 'red';\r\n        }\r\n        return (\r\n            <Popup content={<>Checking if password's <code>match: <span style={{ color: `${color}` }} >{matchFound.toString().toUpperCase()}</span></code></>}\r\n                on='click'\r\n                positionFixed\r\n                size='mini'\r\n                trigger={<Input size='mini' placeholder='Confirm password' name='confirmPassword' type='password' onChange={this.handleChange} required autoComplete='new-password' loading={isLoading} />} />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, redirect } = this.state\r\n        if (redirect) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        return (\r\n            <div>\r\n                <Card.Group style={{ paddingTop: 110 }} centered>\r\n                    <Card color='teal'>\r\n                        <Card.Content>\r\n                            <Card.Header style={{ paddingLeft: 35, fontFamily: \"Rubik, sans-serif\", color: 'rgb(117, 117, 117)', fontWeight: 300 }}><Icon name='user' /> Create account</Card.Header>\r\n                            <Card.Description style={{ paddingLeft: 40 }}>\r\n                                <Input size='mini' placeholder='Name' name='name' type='text' onChange={this.handleChange} required />\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' placeholder='Last name' name='surname' type='text' onChange={this.handleChange} required />\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' placeholder='Email address' name='email' type='email' onChange={this.handleChange} required autoComplete='email' />\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' placeholder='Phone number' name='phone' type='cellphone' onChange={this.handleChange} required />\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' placeholder='Password' name='password' type='password' onChange={this.handleChange} required autoComplete='new-password' />\r\n                                <div className='gr'></div>\r\n                                {this.renderPopUp()}\r\n                                <div className='gr'></div>\r\n                                <div style={{ paddingLeft: 30 }}>\r\n                                    <Button content='Sign Up' loading={isLoading} circular color='teal' type='submit' onClick={this.handleSubmit} />\r\n                                </div>\r\n                            </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                            <small style={{ color: 'rgb(117, 117, 117)', paddingLeft: 50 }}>Already have an account?</small>\r\n                            <Link to='/login' ><Button fluid content='Login' icon='sign in' positive basic /></Link>\r\n\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Card.Group>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateAccount;","import React from 'react';\r\nimport { Card, Button, Icon, Input, Label, Container } from 'semantic-ui-react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport Auth from '../utils/Auth';\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pass_code: '',\r\n            email_address: '',\r\n            redirect: false,\r\n            isLoading: false,\r\n            no_input: false,\r\n        }\r\n    }\r\n\r\n    handleLogin = async () => {\r\n        try {\r\n            const { email_address, pass_code } = this.state;\r\n            const params = {\r\n                input_password: pass_code,\r\n                input_email: email_address\r\n            };\r\n            if (params.input_email === '' || params.input_password === '') {\r\n                this.setState({ no_input: true });\r\n            } else {\r\n                this.setState({ no_input: false });\r\n                await Axios.post('/api/rea_order/login', params)\r\n                    .then(async res => {\r\n                        if (res.data.status === 'Account doesnt exist') {\r\n                            console.log(res.data.status);\r\n                        } else {\r\n                            let results = res.data;\r\n                            if (results.data) {\r\n                                window.localStorage.setItem('token', `${results.token}`);\r\n                                await Auth.check();\r\n                                this.setState({ redirect: true });\r\n                                this.setState({ isLoading: true });\r\n                            };\r\n                        }\r\n\r\n                    });\r\n            };\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    handleOnchange = event => {\r\n        let input = event.target.name;\r\n        if (input === 'email') {\r\n            this.setState({ email_address: event.target.value });\r\n        } else if (input === 'password') {\r\n            this.setState({ pass_code: event.target.value });\r\n        }\r\n    }\r\n\r\n    renderStart = () => {\r\n        return (\r\n            <div>\r\n                <Container textAlign='center' style={{ paddingTop: 200 }}>\r\n                    <Link to='/app'>\r\n                        <Button animated circular positive basic size='large'>\r\n                            <Button.Content visible>Start Ordering!</Button.Content>\r\n                            <Button.Content hidden>\r\n                                <Icon name='arrow right' />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    </Link>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderLogin = () => {\r\n        const { isLoading, no_input } = this.state;\r\n        let label;\r\n        if (no_input) {\r\n            label = <Label basic pointing prompt color='red'>\r\n                You forgot to enter details!\r\n            </Label>\r\n        }\r\n        return (\r\n            <div>\r\n                <Card.Group style={{ paddingTop: 160 }} centered>\r\n                    <Card color='teal'>\r\n                        <Card.Content>\r\n                            <Card.Header style={{ paddingLeft: 75, fontFamily: \"Rubik, sans-serif\", color: 'rgb(117, 117, 117)', fontWeight: 300 }}><Icon name='sign in' /> Login</Card.Header>\r\n                            <Card.Description style={{ paddingLeft: 40 }}>\r\n                                <Input size='mini' icon='user' iconPosition='left' placeholder='Email address' type='text' name='email' onChange={this.handleOnchange} />\r\n                                {label}\r\n                                <div className='gr'></div>\r\n                                <Input size='mini' icon='lock' iconPosition='left' placeholder='Password' type='password' name='password' onChange={this.handleOnchange} />\r\n                                <div className='gr'></div>\r\n                                <div style={{ paddingLeft: 40 }}>\r\n                                    <Button content='Login' circular color='teal' type='submit' onClick={this.handleLogin} loading={isLoading} />\r\n                                </div>\r\n                            </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                            <small style={{ color: 'rgb(117, 117, 117)', paddingLeft: 50 }}>Don't have an account yet?</small>\r\n                            <Link to='/signup'><Button fluid content='Sign Up' icon='signup' positive basic /></Link>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </Card.Group>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        let content;\r\n        if (redirect) {\r\n            return <Redirect to='/app' />;\r\n        }\r\n\r\n        if (Auth.getAuth()) {\r\n            content = this.renderStart();\r\n        } else {\r\n            content = this.renderLogin();\r\n        }\r\n        return (\r\n            <div>\r\n                {content}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Icon, Table } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\n\r\nclass StockTable extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            stock: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await Axios.get('/api/rea_order/all')\r\n                .then(res => {\r\n                    if (res.data.isTrue) {\r\n                        this.setState({ stock: res.data.data });\r\n                    };\r\n                });\r\n        } catch (error) {\r\n\r\n        };\r\n    }\r\n\r\n    renderTableItems = () => {\r\n        const { stock } = this.state;\r\n        return (\r\n            <>\r\n                {stock.map(stock => (\r\n                    <Table.Body key={stock.id}>\r\n                        <Table.Row positive >\r\n                            <Table.Cell>{stock.id}</Table.Cell>\r\n                            <Table.Cell> <Icon name='checkmark' />{stock.name}</Table.Cell>\r\n                            <Table.Cell>{stock.item_description}</Table.Cell>\r\n                            <Table.Cell><strong>R</strong> {stock.price}</Table.Cell>\r\n                            <Table.Cell>{stock.qty}</Table.Cell>\r\n                        </Table.Row>\r\n                    </Table.Body>\r\n                ))}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table celled stackable size='small' striped color='violet' selectable inverted compact>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Item description</Table.HeaderCell>\r\n                        <Table.HeaderCell>Price</Table.HeaderCell>\r\n                        <Table.HeaderCell>Quantity</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                {this.renderTableItems()}\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StockTable;","import React from 'react';\r\nimport { Icon, Table, Checkbox } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\n\r\nclass ClientTable extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await Axios.get('/api/rea_order/users/data')\r\n                .then(async res => {\r\n                    if (res.data.isTrue) {\r\n                        this.setState({ users: await res.data.data });\r\n                    };\r\n                });\r\n        } catch (error) {\r\n\r\n        };\r\n    }\r\n\r\n    renderTableItems = () => {\r\n        const { users } = this.state;\r\n        return (\r\n            <>\r\n                {users.map(users => (\r\n                    <Table.Body>\r\n                        <Table.Row >\r\n                            <Table.Cell>{users.id}</Table.Cell>\r\n                            <Table.Cell>{users.name}</Table.Cell>\r\n                            <Table.Cell>{users.last_name}</Table.Cell>\r\n                            <Table.Cell>{users.email}</Table.Cell>\r\n                            <Table.Cell>{users.phone_number}</Table.Cell>\r\n                            <Table.Cell>{users.home_address}</Table.Cell>\r\n                            <Table.Cell><Icon name='x' color='black' /> {users.verified.toString()}</Table.Cell>\r\n                        </Table.Row>\r\n                    </Table.Body>\r\n                ))}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Checkbox label='Filter by verification' />\r\n                <Table celled stackable size='small' selectable striped color='blue' inverted compact>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Id</Table.HeaderCell>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Last name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Email</Table.HeaderCell>\r\n                            <Table.HeaderCell>Cell number</Table.HeaderCell>\r\n                            <Table.HeaderCell>Home address</Table.HeaderCell>\r\n                            <Table.HeaderCell>Verified</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    {this.renderTableItems()}\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientTable;","import React from 'react'\r\nimport { Segment, Item, Checkbox } from 'semantic-ui-react'\r\nimport _ from 'lodash';\r\nimport { socket } from '../../global/socket-init';\r\n\r\n\r\nexport default class DividerExampleHorizontal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            active: false,\r\n            incoming: [],\r\n            status: 'No orders!',\r\n        }\r\n    }\r\n\r\n    getData = foodItems => {\r\n        if (foodItems.length !== 0) {\r\n            this.setState({ status: 'New orders received!' });\r\n            this.setState({ incoming: foodItems });\r\n        }\r\n    }\r\n\r\n    changeData = () => socket.emit('ordered_data');\r\n\r\n    componentDidMount() {\r\n        socket.emit('ordered_data');\r\n        socket.on('get_data', this.getData);\r\n        socket.on('change_data', this.changeData);\r\n    }\r\n\r\n    ready = (e, { ready_id, ready_order }) => {\r\n        const { incoming } = this.state;\r\n        incoming.forEach(items => {\r\n            if (ready_id === items.id) {\r\n                console.log(items);\r\n                socket.emit('ready for collection', 'Collect order', ready_order, true, ready_id);\r\n                socket.emit('save order', items);\r\n            }\r\n        });\r\n    }\r\n\r\n    accepted = (e, { accept_id }) => {\r\n        const { incoming } = this.state;\r\n        incoming.forEach(order => {\r\n            if (accept_id === order.id) {\r\n                let query = {\r\n                    state: 'Preparing',\r\n                    orders: order\r\n                };\r\n                socket.emit('accepted', query);\r\n            }\r\n        });\r\n    }\r\n\r\n    renderOrderedItems = () => {\r\n        const { incoming } = this.state;\r\n        return (\r\n            <Item.Group divided>\r\n                {_.map(incoming, (item) => (\r\n                    <Item key={item.id}>\r\n                        <Item.Content>\r\n                            <h2 style={{ color: 'rgb(117, 117, 117)', fontWeight: 300, fontSize: 30 }}>Order for: <span style={{ color: 'teal' }}>{item.name + ' ' + item.last_name}</span></h2>\r\n                            <Item.Header as='a'>{item.order_name}</Item.Header>\r\n                            <Item.Meta>\r\n                                <span className='cinema'>{item.order_description}</span>\r\n                            </Item.Meta>\r\n                            <Item.Description>Total: R{item.order_cost}</Item.Description>\r\n                            <Item.Meta>\r\n                                <code>Order id: <span style={{ color: 'blue' }}>{item.order_id}</span></code>\r\n                            </Item.Meta>\r\n                            <Item.Extra>\r\n                                <Checkbox name='accept' accept_id={item.id} onClick={this.accepted} label='Accept' />\r\n                                <Checkbox name='ready' ready_id={item.id} ready_order={item.order_id} onClick={this.ready} label='Done!' />\r\n                            </Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n                ))}\r\n            </Item.Group>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Segment basic textAlign='center'>\r\n                    <h3 style={{ color: 'rgb(117, 117, 117)', fontWeight: 300, fontSize: 30 }}>{this.state.status}</h3>\r\n                </Segment>\r\n                <div className='items newOrders'>\r\n                    <pre style={{ height: 250, overflowY: 'scroll' }}>{this.renderOrderedItems()}</pre>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Checkbox, Form, Input, Radio, TextArea, Button, Message } from 'semantic-ui-react';\r\nimport Axios from 'axios';\r\n\r\nclass UpdateStockForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            qty: 0,\r\n            name: '',\r\n            description: '',\r\n            price: 0,\r\n            isNew: false,\r\n            message: ''\r\n        };\r\n    }\r\n\r\n    handleChange = (e, { qty }) => this.setState({ qty: Number(qty) });\r\n\r\n    handleInputChange = event => {\r\n        let input = event.target.name;\r\n        if (input === 'name') {\r\n            this.setState({ name: event.target.value });\r\n        } else if (input === 'price') {\r\n            this.setState({ price: Number(event.target.value) });\r\n        } else if (input === 'description') {\r\n            this.setState({ description: event.target.value });\r\n        };\r\n    }\r\n\r\n    handleAddButton = async () => {\r\n        try {\r\n            const { qty, name, description, price } = this.state;\r\n            const params = { qty, name, description, price };\r\n            await Axios.post('/api/rea_order/add/stock', params)\r\n                .then(res => {\r\n                    this.setState({ message: res.data.status });\r\n                });\r\n        } catch (error) {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { qty, message } = this.state;\r\n        let content;\r\n        if (message === 'Stock was successfuly updated.') {\r\n            content = <Message success header={message} content='You can now update the quantity of this meal in stock' />;\r\n        } else if (message === 'Stock quantity successfuly updated.') {\r\n            content = <Message success header={message} content='You can now update the quantity of this meal in stock' />;\r\n        };\r\n        \r\n        return (\r\n            <div>\r\n                {content}\r\n                <Form>\r\n                    <Form.Group widths='equal'>\r\n                        <Form.Field control={Input} label='Meal name' placeholder='Name of the meal' name='name' onChange={this.handleInputChange} />\r\n                        <Form.Field control={Input} label='Price tag' placeholder='Meal price tag' type='number' name='price' onChange={this.handleInputChange} />\r\n                    </Form.Group>\r\n                    <Form.Group grouped>\r\n                        <label>Meal quantity</label>\r\n                        <Form.Field control={Radio} label='One' qty='1' checked={qty === '1'} onChange={this.handleChange} />\r\n                        <Form.Field control={Radio} label='Five' qty='5' checked={qty === '5'} onChange={this.handleChange} />\r\n                        <Form.Field control={Radio} label='Ten' qty='10' checked={qty === '10'} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Form.Field control={TextArea} label='Meal description' placeholder='Add what is in the meal...' name='description' onChange={this.handleInputChange} />\r\n                    <Form.Field control={Checkbox} label='New meal?' />\r\n                    <Button content=\"Add item\" labelPosition='right' icon='checkmark' positive onClick={this.handleAddButton} />\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateStockForm","import React, { Component } from 'react'\r\nimport { Menu, Icon, Button, Modal } from 'semantic-ui-react'\r\nimport StockTable from './StockTable';\r\nimport ClientTable from './ClientTable';\r\nimport ActiveOrders from './ActiveOrders';\r\nimport UpdateStockForm from './UpdateStockForm';\r\n\r\nclass Dashbord extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activeItem: 'Stock',\r\n            open: false\r\n        };\r\n    };\r\n\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n    open = () => this.setState({ open: true });\r\n\r\n    close = () => this.setState({ open: false });\r\n\r\n    renderHtmlContent = (active) => {\r\n        let content;\r\n        switch (active) {\r\n            case 'Stock':\r\n                content = <StockTable />;\r\n                break;\r\n            case 'Available stock':\r\n                content = '';\r\n                break;\r\n            case 'Active orders':\r\n                content = <ActiveOrders />;\r\n                break;\r\n            case 'Finished orders':\r\n                content = '';\r\n                break;\r\n            case 'Users':\r\n                content = <ClientTable />;\r\n                break;\r\n            case 'Connected users':\r\n                content = '';\r\n                break;\r\n            case 'Verified users':\r\n                content = '';\r\n                break;\r\n            case 'Profit':\r\n                content = '';\r\n                break;\r\n            case 'Cash':\r\n                content = '';\r\n                break;\r\n            case 'Bought':\r\n                content = '';\r\n                break;\r\n            case 'Admin profile':\r\n                content = '';\r\n                break;\r\n            case 'App settings':\r\n                content = '';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n\r\n    renderMenu = () => {\r\n        const { activeItem } = this.state;\r\n        return (\r\n            <Menu vertical>\r\n                <Menu.Item>\r\n                    <Menu.Header>Products</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Stock' active={activeItem === 'Stock'} onClick={this.handleItemClick} />\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Menu.Header>Orders</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Active orders' active={activeItem === 'Active orders'} onClick={this.handleItemClick}>\r\n                        </Menu.Item>\r\n                        <Menu.Item name='Finished orders' active={activeItem === 'Finished orders'} onClick={this.handleItemClick}>\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Menu.Header>Clients</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Users' active={activeItem === 'Users'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Connected users' active={activeItem === 'Connected users'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Verified users' active={activeItem === 'Verified users'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Not verified users' active={activeItem === 'Not verified users'} onClick={this.handleItemClick} />\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Menu.Header>Market</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Profit' active={activeItem === 'Profit'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Cash' active={activeItem === 'Cash'} onClick={this.handleItemClick} />\r\n                        <Menu.Item name='Bought' active={activeItem === 'Bought'} onClick={this.handleItemClick} />\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Menu.Header>Settings</Menu.Header>\r\n                    <Menu.Menu>\r\n                        <Menu.Item name='Admin profile' active={activeItem === 'Admin profile'} onClick={this.handleItemClick}>\r\n                            Admin profile\r\n                        </Menu.Item>\r\n                        <Menu.Item name='App settings' active={activeItem === 'App settings'} onClick={this.handleItemClick}>\r\n                            App settings\r\n                        </Menu.Item>\r\n                    </Menu.Menu>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n\r\n    renderUpdateStockModal = () => {\r\n        const { open } = this.state;\r\n        return (\r\n            <Modal open={open}>\r\n                <Modal.Header>Add stock</Modal.Header>\r\n                <Modal.Content scrolling><UpdateStockForm /></Modal.Content>\r\n                <Modal.Actions><Button secondary floated='right' compact onClick={this.close} labelPosition='right' icon='x' content='Close' /></Modal.Actions>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { activeItem } = this.state;\r\n        return (\r\n            <div>\r\n                <div className='container-fluid'>\r\n                    <div className='row'>\r\n                        <nav className='col-md-2 d-none d-md-block'>\r\n                            <div className='sidebar-sticky'>\r\n                                {this.renderMenu()}\r\n                            </div>\r\n                        </nav>\r\n                        <main role='main' className='col-md-9 ml-sm-auto col-lg-10 pt-3 px-4' >\r\n                            <div className='d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom'>\r\n                                <h1 style={{ color: 'rgb(117, 117, 117)', fontWeight: 300, fontSize: 40 }} className='h2'>Dashbord <Icon name='dashboard' /> </h1>\r\n                                <div className='btn-toolbar mb-2 mb-md-0'>\r\n                                    <div className='btn-group mr-2'>\r\n                                        <Button attached='left' secondary basic onClick={this.open}>Add stock</Button>\r\n                                        {/* <Button attached='right' secondary basic></Button> */}\r\n                                    </div>\r\n                                    {/* <Button content='This week' basic secondary className='btn btn-sm btn-outline-secondary dropdown-toggle' ></Button> */}\r\n                                </div>\r\n                            </div>\r\n                            <h2 style={{ color: 'rgb(117, 117, 117)', fontWeight: 300, fontSize: 30 }} className='h2'>{activeItem}</h2>\r\n                            <div className=''>\r\n                                {this.renderHtmlContent(activeItem)}\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </div>\r\n                {this.renderUpdateStockModal()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Dashbord };","import React, { Component } from 'react'\r\nimport { Menu, Input, Icon } from 'semantic-ui-react';\r\nimport { Dashbord } from './Dashbord';\r\n\r\nexport default class MenuExampleInvertedSecondary extends Component {\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n    return (\r\n      <div>\r\n        <Menu inverted secondary borderless pointing color='grey' stackable>\r\n          <Menu.Item name='home' active={activeItem === 'home'} onClick={this.handleItemClick}>\r\n            <Icon name='home' color='black' size='large' />Admin\r\n          </Menu.Item>\r\n\r\n          <Menu.Item position='right'><Input placeholder='Search...' /></Menu.Item>\r\n\r\n          <Menu.Item position='right' name='logout' active={activeItem === 'logout'} onClick={this.handleItemClick}>\r\n            <Icon name='log out' size='large' color='black' /> Logout\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Dashbord />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Menu from './components/AdminMenu';\r\n\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Menu />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport ReaOrderApp from './App/ReaOrder';\r\n// import Checkout from './main/checkout';\r\nimport createAccount from './pages/createAccount';\r\nimport Login from './pages/logIn';\r\nimport Auth from './utils/Auth';\r\nimport Admin from './admin/Main';\r\n\r\nconst Router = (props) => (\r\n    <HashRouter>\r\n        <Switch>\r\n            <Route exact path='/signup' component={createAccount} />\r\n            <Route exact path='/login' component={Login} />\r\n            <PrivateRoute exact path='/app' component={ReaOrderApp} />\r\n            <Route exact path='/admin' component={Admin} />\r\n        </Switch>\r\n    </HashRouter>\r\n)\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            Auth.getAuth() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\"\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default Router;","import './App.css';\r\nimport React from 'react';\r\nimport Router from './Router';\r\nimport { SocketConnection } from './global/socket-init';\r\nimport Auth from './utils/Auth';\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      auth: false,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ auth: await Auth.check() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SocketConnection />\r\n        <Router />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}